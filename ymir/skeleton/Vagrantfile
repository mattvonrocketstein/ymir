# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# This is Vagrantfile boilerplate used by ymir.  This is
# experimental, so feel free to delete this file if you are
# only using ymir with EC2.
#

# Specify minimum Vagrant version and Vagrant API version
Vagrant.require_version ">= 1.8.0"
VAGRANTFILE_API_VERSION = "2"

# Load virtualmachine configuration from ymir's vagrant.json file.
# The system command `jsonlint` must already be installed, but will
# have been installed as a script by ymir's `demjson` depedency.
YMIR_JSON = JSON.parse(`#{'jsonlint -FS '+(ENV['YMIR_SERVICE_JSON']||'vagrant.json')}`)
VAGRANT_JSON = YMIR_JSON['vagrant']

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

# The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Always use Vagrant's default insecure key.  Saves time at
  # startup, and who cares if your local development is secure?
  config.ssh.insert_key = false
  config.ssh.forward_x11 = true

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = VAGRANT_JSON['box']

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = VAGRANT_JSON['box_check_update']

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
     # Display the VirtualBox GUI when booting the machine
     #vb.gui = true
     # Customize the amount of memory on the VM:
     vb.memory = VAGRANT_JSON['ram']
   end

end
