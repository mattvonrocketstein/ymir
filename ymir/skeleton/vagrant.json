//
// robotninja/service/service.json
//
{
    // sets namespace  for this service.
    // unused currently but should eventually
    // be used in tagging, etc
    "org_name": "mvr",
    "app_name": "dojo",
    "env_name": "prod",
    "service_name": "data-holdings",

    "logs":[
        //"/var/log/jenkins/jenkins.log",
    ],
    // sets the name for this service.
    // this will be used in AWS tags: choose wisely
    // for readability and any logging you add later
    // Suggested format: "org_name-app_name-env_name"
    "name" : "data-holdings",

    "service_description": "dojo.robotninja",

    // sets the AWS instance type for this service make sure
    // AMI above matches the instance type you are asking for
    //"instance_type"   : "t1.micro",
    "instance_type"   : "vagrant",

    // path specifying the file which is the main entry point for puppet code
    // this file will be used only after the dependencies mentioned in
    // metadata.json have been installed.
    "setup_list" : [
        "puppet/modules/dojo/packages.pp",
        //"puppet/modules/ymir/log_dirs.pp"
        ],

    // a list of names for the AWS security groups this service will belong
    // to. the existence of these security groups will be confirmed when
    // `ymir validate` is run from the command line.
    //"security_groups" : ['dojo'],

    // a list of extra, service-specific puppet files to execute during
    // provisioning.  by the time provisioning happens, any puppet
    // dependencies mentioned in puppet/metadata.json are guaranteed
    // to be installed, and setup_list is guaranteed to have run
    // at least once.
    "provision_list" : [
        "puppet/install_appserver.pp",
        //"puppet/znc.pp",
        "puppet/install_jenkins.pp",
        ],

    // health checks to execute against this service
    "health_checks": {
        "web" :
        ['http_200', 'http://{host}'],
    },
    'service_defaults' : {
        'automation_user':'automation',
        'automation_password':'c23475700800272dfc6a',
        "transmission_download_dir": "/vol/incoming",
    }
}
